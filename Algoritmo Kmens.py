# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nTyiDfbaDFNZNz1H9cLa6ZgwXiWKoTKu
"""

import numpy as np
from matplotlib import pyplot as plt
from sklearn.datasets import make_blobs
from sklearn.cluster import KMeans
dataset= np.array([[1, 4], [2, 2], [2, 5], [3, 3],[3, 5], [4, 7], [5, 6], [6, 4], [6, 7], [7, 6], [7, 9], [8, 9], [8, 9], [9, 4], [9, 8]]) # Grupo de Informaçãoe para agrupamento em cluters.
plt.scatter(dataset[:,0], dataset[:,1])
plt.xlim(0, 10)
plt.ylim(0, 10)
plt.grid()
kmeans=KMeans(n_clusters=3, init='k-means++',max_iter=300, n_init=10) #inicialição do Kameans e número máximo de iterações n init parametro utilizado pela biblioteca para inicialização
pred_y = kmeans.fit_predict(dataset) #execução do Kameans
plt.scatter(dataset[:,0], dataset[:,1]) #centros do centroides que definimos
plt.xlim(0, 10)
plt.ylim(0, 10)
plt.grid()
plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], s=70, c='red') #desenha o gráfico e mostra em vermelho onde ficarão os centroídes
plt.show()
plt.scatter(dataset[:,0], dataset[:,1], c=pred_y)#colore cada ponto com a cor do seu centroíde
plt.xlim(0, 10)
plt.ylim(0, 10)
plt.grid()

plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], s=70, c='red')
plt.show()